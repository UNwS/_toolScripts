#!/bin/bash

if [ -f ./.debug ]
then
	run_cmd_debug=1
else
	run_cmd_debug=0
fi

WORKSPACE=$(pwd)
base_script=${0}

function exit_fn()
{
    # hack 
    git submodule foreach git pull origin master
    git submodule update --rebase --remote
    echo "Exiting ..."
    clean_old_logs
    rm_proff_temp
}

EXITFUN="exit_fn"

if [ -f _toolScripts/bash_func ]; then
        . _toolScripts/bash_func
else
        echo "Error on _toolScripts/bash_func ..."
        exit 1
fi


### MAIN ###
usage() { echo "$0 usage:" && grep " .)\ #" $0; exit 0; }
build_run=0
build_test=0
build_update=0
build_page=0
port=4000

[ $# -eq 0 ] && usage
while getopts "turbp:h" arg; do
  case $arg in
    t) # test
      build_test=1
      ;;
    u) # update
      build_update=1
      ;;
    r) # run
      build_run=1
      ;;
    b) # build
      build_page=1
      ;;
    p) # port
      port=${OPTARG}
      ;;
    h | *) # Display help.
      usage
      exit 0
      ;;
  esac
done

link_draft

if [ $build_update == 1 ]
then
    git_sub_update
    clean_old_logs
    rm_proff_temp
    get_version
    gem_update
    make_diploy
elif [ $build_test == 1 ]
then
    git_sub_update
    clean_old_logs
    rm_proff_temp
    #get_version
    #gem_update
    run_site_dyna
    site_build
    run_htmlproof
elif [ $build_page == 1 ]
then
    git_sub_update
    clean_old_logs
    rm_proff_temp
    #get_version
    #gem_update
    run_site_dyna
    site_build
elif [ $build_run == 1 ]
then
   git_sub_update
   clean_old_logs
   rm_proff_temp
   #get_version
   #gem_update
   run_site_dyna
   site_run $port
else
   echo "    Error in usage ..."
   usage
   exit 0
fi
